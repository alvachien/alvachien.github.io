<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-05-21T10:31:37+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Alva Chien’s Blog</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/welcome-to-jekyll" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2019-07-29T15:09:17+08:00</published><updated>2019-07-29T15:09:17+08:00</updated><id>http://localhost:4000/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/welcome-to-jekyll">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">PHP访问MySql: 中文乱码问题解决方案</title><link href="http://localhost:4000/php-e8-ae-bf-e9-97-aemysql-e4-b8-ad-e6-96-87-e4-b9-b1-e7-a0-81-e9-97-ae-e9-a2-98-e8-a7-a3-e5-86-b3-e6-96-b9-e6-a1-88" rel="alternate" type="text/html" title="PHP访问MySql: 中文乱码问题解决方案" /><published>2015-07-02T23:01:00+08:00</published><updated>2015-07-02T23:01:00+08:00</updated><id>http://localhost:4000/php%E8%AE%BF%E9%97%AEmysql-%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88</id><content type="html" xml:base="http://localhost:4000/php-e8-ae-bf-e9-97-aemysql-e4-b8-ad-e6-96-87-e4-b9-b1-e7-a0-81-e9-97-ae-e9-a2-98-e8-a7-a3-e5-86-b3-e6-96-b9-e6-a1-88">&lt;p&gt;偶尔的机会，遇到PHP代码访问MySql一直中文乱码，登录phpMyAdmin，界面显示是很奇怪的utf8mb4_general_ci;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.alvachien.com/alvablog/wp-content/uploads/2015/07/MySqlIssue.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-1812&quot; src=&quot;http://www.alvachien.com/alvablog/wp-content/uploads/2015/07/MySqlIssue.jpg&quot; alt=&quot;PHP MySQL乱码&quot; width=&quot;685&quot; height=&quot;166&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PHP MySQL乱码&lt;/p&gt;

&lt;p&gt;而且，当选择utf8_general_ci的时候，系统自动跳转utf8mb4_general_ci。&lt;/p&gt;

&lt;p&gt;网络遍寻未果的情况下，一个临时的解决方法是，在每次PHP发起MySql connection的时候显示定义character set：
&lt;code&gt;
mysqli_query($link, &quot;SET NAMES 'UTF8'&quot;);
mysqli_query($link, &quot;SET CHARACTER SET UTF8&quot;);
mysqli_query($link, &quot;SET CHARACTER_SET_RESULTS=UTF8'&quot;);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;是为之记。
Alva Chien
2015.7.2&lt;/p&gt;</content><author><name>alvachien</name></author><summary type="html">偶尔的机会，遇到PHP代码访问MySql一直中文乱码，登录phpMyAdmin，界面显示是很奇怪的utf8mb4_general_ci;</summary></entry><entry><title type="html">jQuery vs Angular JS: 遍历数组</title><link href="http://localhost:4000/jquery-vs-angular-js-e9-81-8d-e5-8e-86-e6-95-b0-e7-bb-84" rel="alternate" type="text/html" title="jQuery vs Angular JS: 遍历数组" /><published>2015-07-02T22:51:00+08:00</published><updated>2015-07-02T22:51:00+08:00</updated><id>http://localhost:4000/jquery-vs-angular-js-%E9%81%8D%E5%8E%86%E6%95%B0%E7%BB%84</id><content type="html" xml:base="http://localhost:4000/jquery-vs-angular-js-e9-81-8d-e5-8e-86-e6-95-b0-e7-bb-84">&lt;p&gt;jQuery中遍历数组，通常的方法是$.each; 语法：
&lt;code&gt;$(selector).each(function(index,element))&lt;/code&gt;
&lt;code&gt;$.each(arData, function(idx, obj) {
// ....
// process on obj...
});&lt;/code&gt;
如果要中断遍历，即类似for循环中的break，可以在function中使用：
&lt;code&gt;return false;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Angular JS中，通常的方法是Angular.forEach。实例代码：
&lt;code&gt;if (angular.isArray(arData)) {
angular.forEach(arData, function(obj){
// process on obj...
});
}&lt;/code&gt;
可惜的是，该方法无法中断遍历。&lt;/p&gt;

&lt;p&gt;是为之记。
Alva Chien
2015.7.2&lt;/p&gt;</content><author><name>alvachien</name></author><summary type="html">jQuery中遍历数组，通常的方法是$.each; 语法： $(selector).each(function(index,element)) $.each(arData, function(idx, obj) { // .... // process on obj... }); 如果要中断遍历，即类似for循环中的break，可以在function中使用： return false;</summary></entry><entry><title type="html">phpMyAdmin无法登录之解决方案</title><link href="http://localhost:4000/phpmyadmin-e6-97-a0-e6-b3-95-e7-99-bb-e5-bd-95-e4-b9-8b-e8-a7-a3-e5-86-b3-e6-96-b9-e6-a1-88" rel="alternate" type="text/html" title="phpMyAdmin无法登录之解决方案" /><published>2015-06-25T20:42:00+08:00</published><updated>2015-06-25T20:42:00+08:00</updated><id>http://localhost:4000/phpmyadmin%E6%97%A0%E6%B3%95%E7%99%BB%E5%BD%95%E4%B9%8B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88</id><content type="html" xml:base="http://localhost:4000/phpmyadmin-e6-97-a0-e6-b3-95-e7-99-bb-e5-bd-95-e4-b9-8b-e8-a7-a3-e5-86-b3-e6-96-b9-e6-a1-88">&lt;p&gt;登录phpMyAdmin，一直有个user没有设置密码的警告，于是把root的密码给修改掉了，然后，再登录phpMyAdmin，一个华丽丽的错误显示在屏幕上：&lt;/p&gt;

&lt;p&gt;#1045 - Access denied for user ‘root’@’localhost’ (using password: NO)&lt;/p&gt;

&lt;p&gt;反复登录，然而错误坚挺依旧。于是，万能的搜索引擎开动了，最后解决方案如下：&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;打开PHPMyAdmin的安装目录；&lt;/li&gt;
	&lt;li&gt;打开config.inc.php文件，修改以下几行：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;/* Authentication type &lt;em&gt;/
$cfg[‘Servers’][$i][‘verbose’] = ‘mysql’;
//$cfg[‘Servers’][$i][‘auth_type’] = ‘cookie’;
$cfg[‘Servers’][$i][‘auth_type’] = ‘config’;
$cfg[‘Servers’][$i][‘user’] = ‘root’; /&lt;/em&gt; 修改&lt;em&gt;/
$cfg[‘Servers’][$i][‘password’] = ‘’; /&lt;/em&gt; 修改&lt;em&gt;/
/&lt;/em&gt; Server parameters &lt;em&gt;/
$cfg[‘Servers’][$i][‘host’] = ‘127.0.0.1’;
$cfg[‘Servers’][$i][‘connect_type’] = ‘tcp’;
$cfg[‘Servers’][$i][‘compress’] = false;
/&lt;/em&gt; Select mysql if your server does not have mysqli &lt;em&gt;/
$cfg[‘Servers’][$i][‘extension’] = ‘mysqli’;
$cfg[‘Servers’][$i][‘AllowNoPassword’] = true; /&lt;/em&gt; 修改*/&lt;/p&gt;

&lt;p&gt;是为之记。
Alva Chien
2015.6.25&lt;/p&gt;</content><author><name>alvachien</name></author><summary type="html">登录phpMyAdmin，一直有个user没有设置密码的警告，于是把root的密码给修改掉了，然后，再登录phpMyAdmin，一个华丽丽的错误显示在屏幕上：</summary></entry><entry><title type="html">素描人像PS方法</title><link href="http://localhost:4000/e7-b4-a0-e6-8f-8f-e4-ba-ba-e5-83-8fps-e6-96-b9-e6-b3-95" rel="alternate" type="text/html" title="素描人像PS方法" /><published>2015-06-24T23:31:00+08:00</published><updated>2015-06-24T23:31:00+08:00</updated><id>http://localhost:4000/%E7%B4%A0%E6%8F%8F%E4%BA%BA%E5%83%8Fps%E6%96%B9%E6%B3%95</id><content type="html" xml:base="http://localhost:4000/e7-b4-a0-e6-8f-8f-e4-ba-ba-e5-83-8fps-e6-96-b9-e6-b3-95">&lt;p&gt;素描人像PS方法，使用最常见的最小值方法。步骤如下：&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;复制背景图层为图层1：Ctrl+J。&lt;/li&gt;
	&lt;li&gt;对图层1去色：Ctrl+Shift+U；&lt;/li&gt;
	&lt;li&gt;使用色阶增强一下对比度：Ctrl+L；设置中间值为&amp;lt;1的值，具体因图而异；&lt;/li&gt;
	&lt;li&gt;复制图层1为图层2：Ctrl+J；&lt;/li&gt;
	&lt;li&gt;对图层2反向：Ctrl+I；&lt;/li&gt;
	&lt;li&gt;设置图层2为“颜色减淡”；&lt;/li&gt;
	&lt;li&gt;滤镜-&amp;gt;其他-&amp;gt;最小值；取值因图而异；&lt;/li&gt;
	&lt;li&gt;【Optional】如果线条还需要加深，执行“图像-&amp;gt;调整-&amp;gt;可选颜色”，在可选颜色面板上选择中性色，将黑色选项中的参数设置为+15%；&lt;/li&gt;
	&lt;li&gt;打开图层1的“图层样式”对话框（双击图层图标）,同工笔画人像PS方法一的step 5；&lt;/li&gt;
	&lt;li&gt;盖印图层：Ctrl+E为合并到新图层1。&lt;/li&gt;
	&lt;li&gt;在背景图层和图层1之间插入新的空白图层。&lt;/li&gt;
	&lt;li&gt;选择图层1，创建矩形选区来包含图片主体，快捷键：M；&lt;/li&gt;
	&lt;li&gt;按Shift+F6来创建羽化，参考值为50；&lt;/li&gt;
	&lt;li&gt;创建图层蒙版；&lt;/li&gt;
	&lt;li&gt;盖印图层：Ctrl+E合并到新图层。&lt;/li&gt;
	&lt;li&gt;滤镜-&amp;gt;杂色-&amp;gt;添加杂色，数量设置为150%；&lt;/li&gt;
	&lt;li&gt;滤镜-&amp;gt;模糊-&amp;gt;动感模糊，角度设置为45，距离为15像素；&lt;/li&gt;
	&lt;li&gt;在背景层与图层1之间新建图层，Shift+F5填充颜色，RGB（240,240,240）；&lt;/li&gt;
	&lt;li&gt;Ctrl+E合并图层；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;是为之记。
Alva Chien
2015.6.24&lt;/p&gt;</content><author><name>alvachien</name></author><summary type="html">素描人像PS方法，使用最常见的最小值方法。步骤如下： 复制背景图层为图层1：Ctrl+J。 对图层1去色：Ctrl+Shift+U； 使用色阶增强一下对比度：Ctrl+L；设置中间值为&amp;lt;1的值，具体因图而异； 复制图层1为图层2：Ctrl+J； 对图层2反向：Ctrl+I； 设置图层2为“颜色减淡”； 滤镜-&amp;gt;其他-&amp;gt;最小值；取值因图而异； 【Optional】如果线条还需要加深，执行“图像-&amp;gt;调整-&amp;gt;可选颜色”，在可选颜色面板上选择中性色，将黑色选项中的参数设置为+15%； 打开图层1的“图层样式”对话框（双击图层图标）,同工笔画人像PS方法一的step 5； 盖印图层：Ctrl+E为合并到新图层1。 在背景图层和图层1之间插入新的空白图层。 选择图层1，创建矩形选区来包含图片主体，快捷键：M； 按Shift+F6来创建羽化，参考值为50； 创建图层蒙版； 盖印图层：Ctrl+E合并到新图层。 滤镜-&amp;gt;杂色-&amp;gt;添加杂色，数量设置为150%； 滤镜-&amp;gt;模糊-&amp;gt;动感模糊，角度设置为45，距离为15像素； 在背景层与图层1之间新建图层，Shift+F5填充颜色，RGB（240,240,240）； Ctrl+E合并图层； 是为之记。 Alva Chien 2015.6.24</summary></entry><entry><title type="html">工笔画人像PS后期方法二</title><link href="http://localhost:4000/e5-b7-a5-e7-ac-94-e7-94-bb-e4-ba-ba-e5-83-8fps-e5-90-8e-e6-9c-9f-e6-96-b9-e6-b3-95-e4-ba-8c" rel="alternate" type="text/html" title="工笔画人像PS后期方法二" /><published>2015-06-24T00:36:00+08:00</published><updated>2015-06-24T00:36:00+08:00</updated><id>http://localhost:4000/%E5%B7%A5%E7%AC%94%E7%94%BB%E4%BA%BA%E5%83%8Fps%E5%90%8E%E6%9C%9F%E6%96%B9%E6%B3%95%E4%BA%8C</id><content type="html" xml:base="http://localhost:4000/e5-b7-a5-e7-ac-94-e7-94-bb-e4-ba-ba-e5-83-8fps-e5-90-8e-e6-9c-9f-e6-96-b9-e6-b3-95-e4-ba-8c">&lt;p&gt;方法二使用最小值法，这也是最常见的方法。&lt;/p&gt;

&lt;p&gt;具体步骤：&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;复制背景图层为图层1：Ctrl+J。&lt;/li&gt;
	&lt;li&gt;对图层1去色：Ctrl+Shift+U；&lt;/li&gt;
	&lt;li&gt;使用色阶增强一下对比度：Ctrl+L；设置中间值为&amp;lt;1的值，具体因图而异；&lt;/li&gt;
	&lt;li&gt;复制图层1为图层2：Ctrl+J；&lt;/li&gt;
	&lt;li&gt;对图层2反向：Ctrl+I；&lt;/li&gt;
	&lt;li&gt;设置图层2为“颜色减淡”；&lt;/li&gt;
	&lt;li&gt;滤镜-&amp;gt;其他-&amp;gt;最小值；取值因图而异；&lt;/li&gt;
	&lt;li&gt;【Optional】如果线条还需要加深，执行“图像-&amp;gt;调整-&amp;gt;可选颜色”，在可选颜色面板上选择中性色，将黑色选项中的参数设置为+15%；&lt;/li&gt;
	&lt;li&gt;打开图层1的“图层样式”对话框（双击图层图标）,同方法一的step 5；&lt;/li&gt;
	&lt;li&gt;盖印图层：Ctrl+E为合并到新图层1。&lt;/li&gt;
	&lt;li&gt;【Optional】通过曲线来调整图层1合适的亮度；&lt;/li&gt;
	&lt;li&gt;复制图层1为图层2，对其应用高斯模糊，建议设置较大的值；&lt;/li&gt;
	&lt;li&gt;设置图层2为“线性加深”；&lt;/li&gt;
	&lt;li&gt;【Optional】创建新图层，对皮肤进行上色；&lt;/li&gt;
	&lt;li&gt;【Optional】创建新图层，对其他部分上色，如嘴唇上鲜艳的颜色；&lt;/li&gt;
	&lt;li&gt;复制背景图层，并移动到最顶层：Ctrl+Shift+]；&lt;/li&gt;
	&lt;li&gt;设置复制的背景图层为“颜色”，并调节不透明度；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;是为之记。
Alva Chien
2015.6.24&lt;/p&gt;</content><author><name>alvachien</name></author><summary type="html">方法二使用最小值法，这也是最常见的方法。</summary></entry><entry><title type="html">工笔画人像PS后期方法一</title><link href="http://localhost:4000/e5-b7-a5-e7-ac-94-e7-94-bb-e4-ba-ba-e5-83-8fps-e5-90-8e-e6-9c-9f-e6-96-b9-e6-b3-95-e4-b8-80" rel="alternate" type="text/html" title="工笔画人像PS后期方法一" /><published>2015-06-23T22:55:00+08:00</published><updated>2015-06-23T22:55:00+08:00</updated><id>http://localhost:4000/%E5%B7%A5%E7%AC%94%E7%94%BB%E4%BA%BA%E5%83%8Fps%E5%90%8E%E6%9C%9F%E6%96%B9%E6%B3%95%E4%B8%80</id><content type="html" xml:base="http://localhost:4000/e5-b7-a5-e7-ac-94-e7-94-bb-e4-ba-ba-e5-83-8fps-e5-90-8e-e6-9c-9f-e6-96-b9-e6-b3-95-e4-b8-80">&lt;p&gt;缘起：看到这么一组片子（http://www.ilovemw.com/post/7922.html）。于是，今天晚上花了两个小时来研究PS方法。&lt;/p&gt;

&lt;p&gt;方法一，影印法。步骤如下：&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;复制背景图层为图层1：Ctrl+J。&lt;/li&gt;
	&lt;li&gt;对图层1去色：Ctrl+Shift+U；&lt;/li&gt;
	&lt;li&gt;滤镜-&amp;gt;滤镜库-&amp;gt;影印。细节与暗度因图片而异。&lt;/li&gt;
	&lt;li&gt;打开图层1的“图层样式”对话框（双击图层图标），参数因图片而异。&lt;/li&gt;
	&lt;li&gt;

[caption id=&quot;attachment_1796&quot; align=&quot;alignnone&quot; width=&quot;331&quot;]&lt;a href=&quot;http://www.alvachien.com/alvablog/wp-content/uploads/2015/06/0001.png&quot;&gt;&lt;img class=&quot;size-full wp-image-1796&quot; src=&quot;http://www.alvachien.com/alvablog/wp-content/uploads/2015/06/0001.png&quot; alt=&quot;图层样式&quot; width=&quot;331&quot; height=&quot;157&quot; /&gt;&lt;/a&gt; 图层样式[/caption]&lt;/li&gt;
	&lt;li&gt;复制图层1为图层2：Ctrl+J；&lt;/li&gt;
	&lt;li&gt;对图层2使用高斯模糊，参数因图片而异；&lt;/li&gt;
	&lt;li&gt;设置混合模式为“线性加深”；&lt;/li&gt;
	&lt;li&gt;复制背景图层为背景副本；并将其拖动为顶层图层；设置混合模式为“颜色”；&lt;/li&gt;
	&lt;li&gt;再次复制背景层，并拖动为顶级图层，使用黑色蒙版，将手臂皮肤等加亮；可以进一步设置曲线来提亮颜色。&lt;/li&gt;
	&lt;li&gt;创建新图层，填充颜色：Shift+F5；参考颜色：（194,187,158），设置模式为“线性加深”。&lt;/li&gt;
	&lt;li&gt;再添加别的文本等、执行锐化等后期操作。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意，也可以对人物进行抠图，再进行上述处理。&lt;/p&gt;

&lt;p&gt;是为之记。
Alva Chien
2015.6.23&lt;/p&gt;</content><author><name>alvachien</name></author><summary type="html">缘起：看到这么一组片子（http://www.ilovemw.com/post/7922.html）。于是，今天晚上花了两个小时来研究PS方法。</summary></entry><entry><title type="html">Solve the issues on AngularJS: [$injector:modulerr]</title><link href="http://localhost:4000/solve-the-issues-on-angularjs-injectormodulerr" rel="alternate" type="text/html" title="Solve the issues on AngularJS: [$injector:modulerr]" /><published>2015-06-19T23:29:00+08:00</published><updated>2015-06-19T23:29:00+08:00</updated><id>http://localhost:4000/solve-the-issues-on-angularjs-injectormodulerr</id><content type="html" xml:base="http://localhost:4000/solve-the-issues-on-angularjs-injectormodulerr">&lt;p&gt;按照现有的Angular JS的教程，即便最简单的controller定义都会遇到[$injector:modulerr]的错误。万能的搜索引擎告诉我，这种问题只出现在AngularJS 1.3版本之后，换言之，这是版本1.2到1.2的break update。&lt;/p&gt;

&lt;p&gt;解决方案：&lt;/p&gt;

&lt;p&gt;var app = angular.module(‘aApp’, []);&lt;/p&gt;

&lt;p&gt;替换为：&lt;/p&gt;

&lt;p&gt;var app = angular.module(‘aApp’, [“ngRoute”]);&lt;/p&gt;

&lt;p&gt;注意的是，需要include Angular-router.js。&lt;/p&gt;

&lt;p&gt;是为之记。
Alva Chien
2015.6.19&lt;/p&gt;</content><author><name>alvachien</name></author><summary type="html">按照现有的Angular JS的教程，即便最简单的controller定义都会遇到[$injector:modulerr]的错误。万能的搜索引擎告诉我，这种问题只出现在AngularJS 1.3版本之后，换言之，这是版本1.2到1.2的break update。</summary></entry><entry><title type="html">恐龙依旧在，续集还得等。</title><link href="http://localhost:4000/e6-81-90-e9-be-99-e4-be-9d-e6-97-a7-e5-9c-a8-ef-bc-8c-e7-bb-ad-e9-9b-86-e8-bf-98-e5-be-97-e7-ad-89-e3-80-82" rel="alternate" type="text/html" title="恐龙依旧在，续集还得等。" /><published>2015-06-17T23:11:00+08:00</published><updated>2015-06-17T23:11:00+08:00</updated><id>http://localhost:4000/%E6%81%90%E9%BE%99%E4%BE%9D%E6%97%A7%E5%9C%A8,%E7%BB%AD%E9%9B%86%E8%BF%98%E5%BE%97%E7%AD%89%E3%80%82</id><content type="html" xml:base="http://localhost:4000/e6-81-90-e9-be-99-e4-be-9d-e6-97-a7-e5-9c-a8-ef-bc-8c-e7-bb-ad-e9-9b-86-e8-bf-98-e5-be-97-e7-ad-89-e3-80-82">&lt;p&gt;好莱坞的大片，大抵是一部成功之后，紧跟着N部的续集亦或前传，然后形成一个系列。斯皮尔伯格导演的《侏罗纪公园》显然就是这样一部作品。从第一部《侏罗纪公园》中硕大恐龙带来的视觉震撼到接二连三的续集给观众带来的审美疲劳，也就造就了这部以恐龙为题材的电影无以为继的现状。&lt;/p&gt;

&lt;p&gt;所以，当看到《侏罗纪世界》的预告时，心里还是有点小激动的，尽管清楚的知道，预告中所宣称的斯皮尔伯格的评价更多的应该只是商业宣传策略，但有导演敢延续经典就是很了不起的举动了，起码，值得我去影院支持一下。&lt;/p&gt;

&lt;p&gt;整部电影的编剧环节显得中规中矩，或者，严格一点来说，拖沓之外，小缺陷还挺多。主线情节上，编剧夹杂了太多的元素，譬如兄弟之间的感情啊，父母双方的家庭情节，孩子母亲跟其妹妹的姐妹情意等等，导致各个小环节都拿到了时间却不足以交代清楚。主线如此，支线更如是。运营公园的公司与背后的基因公司的纠缠，号称公园的老板与实验室专家、实验室专家与基因公司保膘团队，等等，我只能说，好大一盆祺。硬伤方面更不要说了，只举一个，兄弟俩逃生时候居然把汽车发动了——一辆一看就是N年没开过的车——这车邮箱的密封性好得令人发指啊，如果是电动车，那只能说，这车的电池太牛逼了。&lt;/p&gt;

&lt;p&gt;摄影和特效都是典型的好莱坞手笔，加上还有IMAX在其后撑腰。当然，20年的作品已经把恐龙做得惟妙惟肖了，而20年后的影片，加入了这几年好莱坞动作片常见的镜头快速切换的剪接手法，而大量航拍手法的运用，使得拍摄岛屿远景这类的风景镜头很是赏心悦目。&lt;/p&gt;

&lt;p&gt;毫无疑问，这部电影显然为了续集准备了足够的伏笔，因为影片中主要的反派——高智商的恐龙——的幕后黑手已然成功逃脱，还带走了所有的资料，显然随时可以重来。而能不能重来，决定性因素只在于，这部电影的票房能不能让出品人愿意掏银子。恐龙依旧在，续集还得等。&lt;/p&gt;

&lt;p&gt;是为之记。
Alva Chien
2015.5.16&lt;/p&gt;</content><author><name>alvachien</name></author><summary type="html">好莱坞的大片，大抵是一部成功之后，紧跟着N部的续集亦或前传，然后形成一个系列。斯皮尔伯格导演的《侏罗纪公园》显然就是这样一部作品。从第一部《侏罗纪公园》中硕大恐龙带来的视觉震撼到接二连三的续集给观众带来的审美疲劳，也就造就了这部以恐龙为题材的电影无以为继的现状。</summary></entry><entry><title type="html">国内的前端公共库CDN服务</title><link href="http://localhost:4000/e5-9b-bd-e5-86-85-e7-9a-84-e5-89-8d-e7-ab-af-e5-85-ac-e5-85-b1-e5-ba-93cdn-e6-9c-8d-e5-8a-a1" rel="alternate" type="text/html" title="国内的前端公共库CDN服务" /><published>2015-06-11T17:52:00+08:00</published><updated>2015-06-11T17:52:00+08:00</updated><id>http://localhost:4000/%E5%9B%BD%E5%86%85%E7%9A%84%E5%89%8D%E7%AB%AF%E5%85%AC%E5%85%B1%E5%BA%93cdn%E6%9C%8D%E5%8A%A1</id><content type="html" xml:base="http://localhost:4000/e5-9b-bd-e5-86-85-e7-9a-84-e5-89-8d-e7-ab-af-e5-85-ac-e5-85-b1-e5-ba-93cdn-e6-9c-8d-e5-8a-a1">&lt;p&gt;难得流氓们发次善心，Baidu，Sina等推出的前端公共库CDN服务还是值得值得表扬一下的。综合来说，Baidu的库是最全的，也最新。&lt;/p&gt;

&lt;p&gt;Baidu 静态资源CDN公共库：http://cdn.code.baidu.com/
http://developer.baidu.com/wiki/index.php?title=docs/cplat/libs&lt;/p&gt;

&lt;p&gt;Sina云计算CDN公共库： http://lib.sinaapp.com/&lt;/p&gt;

&lt;p&gt;360 前端公共库CDN: http://libs.useso.com/&lt;/p&gt;

&lt;p&gt;具体使用实例，如，在360的CDN公共库使用AngularJS库，版本选择1.2.9，则套用的压缩文件的URL为：http://libs.useso.com/js/angular.js/1.2.9/angular.min.js&lt;/p&gt;

&lt;p&gt;Google前端公共库的使用方法，将下列的Script引用:&lt;/p&gt;

&lt;p&gt;&amp;lt;script type=’text/javascript’ src=’http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js?ver=3.4.2’&amp;gt;&amp;lt;/script&amp;gt;&lt;/p&gt;

&lt;p&gt;修改为：&lt;/p&gt;

&lt;p&gt;&amp;lt;script type=’text/javascript’ src=’http://ajax.useso.com/ajax/libs/jquery/1.7.2/jquery.min.js?ver=3.4.2’&amp;gt;&amp;lt;/script&amp;gt;&lt;/p&gt;

&lt;p&gt;是为之记。
Alva Chien
2015.6.11&lt;/p&gt;</content><author><name>alvachien</name></author><summary type="html">难得流氓们发次善心，Baidu，Sina等推出的前端公共库CDN服务还是值得值得表扬一下的。综合来说，Baidu的库是最全的，也最新。</summary></entry></feed>